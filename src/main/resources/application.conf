akka {

  http {
    server {
      server-header = "game-recommender"
      request-timeout = 30s
    }
  }
  loglevel = DEBUG
  stdout-loglevel = INFO
}

dispatchers{
  core-dispatcher{
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "thread-pool-executor"
    # Configuration for the thread pool
    thread-pool-executor {
      keep-alive-time = 60s
      # minimum number of threads to cap factor-based core number to
      core-pool-size-min = 8
      # No of core threads ... ceil(available processors * factor)
      core-pool-size-factor = 3.0
      # maximum number of threads to cap factor-based number to
      core-pool-size-max = 64
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 2
  }
}

recommender{
  recommendations-limit = 5
  cors{
    allowed-origins = "http://localhost:8100"
  }
}

spark{
  neo4j{
    bolt{
      url = "bolt://localhost:7687"
      user = "neo4j"
      password ="admin"
    }
  }
}

http {
  host = "0.0.0.0"
  port = 8022
}